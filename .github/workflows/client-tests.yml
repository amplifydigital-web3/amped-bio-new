name: Client Tests

on:
  pull_request:
    branches: [main, development]
  workflow_dispatch:  # Allow manual triggering

jobs:
  auth-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Increased timeout

    # Global environment variables available to all steps
    env:
      NODE_ENV: "test"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "store-path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.job }}-${{ hashFiles('**/*.{ts,tsx,js,jsx}') }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('turbo.json') }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ github.job }}-
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install

      # Set up Docker Compose with proper error handling
      - name: Start Docker services
        run: |
          docker compose version
          docker compose up -d || (docker ps -a && exit 1)
          docker ps -a

      - name: Install wait-for-it
        run: |
          sudo apt-get update
          sudo apt-get install -y wait-for-it

      - name: Wait for database to be ready
        run: wait-for-it -t 60 localhost:3306 -- echo "Database is up"

      - name: Load environment variables
        uses: cardinalby/export-env-action@2.2.0
        with:
          envFile: 'apps/server/.env.example'    
          expand: 'true'

      - name: Generate JWT_PRIVATE_KEY
        run: |
          openssl genpkey -algorithm RSA -out jwtRS256.key -pkeyopt rsa_keygen_bits:2048
          echo "JWT_PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat jwtRS256.key >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Run database migrations
        run: |
          cd apps/server
          pnpm prisma generate
          pnpm prisma migrate deploy

      - name: Build and start backend
        run: |
          cd apps/server
          pnpm build
          pnpm start &
          echo "Waiting for backend on port 43000"
          wait-for-it -t 60 localhost:43000 -- echo "Backend is up"

      - name: Build and start frontend
        run: |
          cd apps/client
          pnpm build
          pnpm exec vite preview --port 5173 &
          echo "Waiting for frontend on port 5173"
          wait-for-it -t 60 localhost:5173 -- echo "Frontend is up"
        
      - name: Debug information
        run: |
          echo "Listing node_modules structure:"
          ls -la node_modules/.bin/
          echo "Checking for Cypress binary:"
          find node_modules -name "cypress" -type f -o -type d | grep -v "node_modules/.*/node_modules"

      - name: Install Cypress
        run: |
          cd apps/client
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "PNPM version: $(pnpm -v)"
          pnpm install cypress
          npx cypress verify
          npx cypress info

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          project: apps/client
          config-file: apps/client/cypress.config.ts
          install: false  # We've already installed dependencies
          wait-on: 'http://localhost:5173,http://localhost:4300'  # Wait for both client and server
          wait-on-timeout: 30  # Give it up to 2 minutes to start
          
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/client/cypress/screenshots
          retention-days: 30
          
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: apps/client/cypress/videos
          retention-days: 30
